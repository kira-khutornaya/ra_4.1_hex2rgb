{"version":3,"sources":["Converter.js","App.js","reportWebVitals.js","index.js"],"names":["Converter","useState","color","setColor","className","style","backgroundColor","onChange","target","value","length","result","exec","parseInt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNA+BeA,MA7Bf,WAAsB,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,KAenB,OACE,qBAAKC,UAAU,YAAYC,MAAO,CAAEC,gBAAiBJ,GAArD,SACE,sBAAKE,UAAU,uBAAf,UACE,uBACEA,UAAU,wBACVG,SAjBS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,KAAIA,EAAOC,MAAMC,OAAS,GAA1B,CAEA,IAAMC,EAAS,4CAA4CC,KAAKJ,EAAOC,OAMvEN,EALKQ,EAKI,OAAD,OAAQE,SAASF,EAAO,GAAI,IAA5B,aAAoCE,SAASF,EAAO,GAAI,IAAxD,aAAgEE,SAASF,EAAO,GAAI,IAApF,KAJG,6CAeP,qBAAKP,UAAU,oBAAf,SAAoCF,UCjB7BY,MAJf,WACE,OAAO,cAAC,EAAD,KCSMC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1cf21849.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction Converter() {\n  const [color, setColor] = useState('');\n\n  const hexToRgb = ({ target }) => {\n    if (target.value.length < 7) return;\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(target.value);\n    if (!result) {\n      setColor('Ошибка!');\n      return;\n    }\n\n    setColor(`rgb(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)})`);\n  };\n\n  return (\n    <div className=\"converter\" style={{ backgroundColor: color }}>\n      <div className=\"converter__container\">\n        <input\n          className=\"converter-form__input\"\n          onChange={hexToRgb}\n        />\n\n        <div className=\"converter__result\">{color}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Converter;\n","import React from 'react';\nimport './App.css';\nimport Converter from './Converter';\n\nfunction App() {\n  return <Converter />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}